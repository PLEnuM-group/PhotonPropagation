var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PhotonPropagation","category":"page"},{"location":"#PhotonPropagation","page":"Home","title":"PhotonPropagation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PhotonPropagation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PhotonPropagation, PhotonPropagation.Medium, PhotonPropagation.Spectral, PhotonPropagation.Detection, PhotonPropagation.PhotonPropagationCuda, PhotonPropagation.LightYield]","category":"page"},{"location":"#PhotonPropagation.Medium.DIPPR105Params","page":"Home","title":"PhotonPropagation.Medium.DIPPR105Params","text":"DIPPR105Params\n\nParameters for the DIPPR105 formula\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Medium.HomogenousIceProperties","page":"Home","title":"PhotonPropagation.Medium.HomogenousIceProperties","text":"HomogenousIceProperties{T<:Real} <: MediumProperties{T}\n\nProperties for deep (homogenuous) ice. Uses the SPICE model. See: https://user-web.icecube.wisc.edu/~dima/work/WISC/ppc/spice/new/paper/a.pdf\n\nFields:\n\n-radiationlength – Radiation length (g/cm^2) -meanscatteringangle – Cosine of the mean scattering angle -hgfraction – Mixture weight of the HG component -ASPICE – A parameter of the SPICE model -BSPICE – B parameter of the SPICE model -DSPICE – B parameter of the SPICE model -ESPICE – B parameter of the SPICE model -adust400 – Absorption coefficient at 400nm -bdust400 – Scattering coefficient at 400nm -alphascadust – Alpha parameter of the SPICE model -kappaabsdust – Kappa parameter of the SPICE model -deltaTAMANDA – deltaT parameter of the SPICE model -absscale – Scaling factor for the absorption length -scascale – Scaling factor for the scattering length\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Medium.WaterProperties","page":"Home","title":"PhotonPropagation.Medium.WaterProperties","text":"WaterProperties{T<:Real} <: MediumProperties{T}\n\nProperties for a water-like medium. Use unitful constructor to create a value of this type.\n\nFields:\n\n-salinity – Salinity (permille) -pressure – Pressure (atm) -temperature – Temperature (°C) -volconcsmallpart – Volumetric concentrations of small particles (ppm) -volconclargepart – Volumetric concentrations of large particles (ppm) -radiationlength – Radiation length (g/cm^2) -density – Density (kg/m^3) -meanscatteringangle – Cosine of the mean scattering angle -absscale – Scaling factor for the absorption length -sca_scale – Scaling factor for the scattering length\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Medium.WaterProperties-Union{Tuple{T}, Tuple{Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, T}, Tuple{Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, T, Any}, Tuple{Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, Unitful.Quantity{T}, T, Any, Any}} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.WaterProperties","text":"    function WaterProperties(\n        salinity::Unitful.Quantity{T},\n        pressure::Unitful.Quantity{T},\n        temperature::Unitful.Quantity{T},\n        vol_conc_small_part::Unitful.Quantity{T},\n        vol_conc_large_part::Unitful.Quantity{T},\n        radiation_length::Unitful.Quantity{T}\n    ) where {T<:Real}\nConstruct a `WaterProperties` type.\n\nThe constructor uses DIPPR105 to calculate the density at the given temperature.\nParameters for the Quan-Fry parametrisation of the refractive index are calculated\nfor the given salinity, temperature and pressure.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.DIPPR105","page":"Home","title":"PhotonPropagation.Medium.DIPPR105","text":"DIPPR105(temperature::Real, params::DIPPR105Params=DDBDIPR105Params)\n\nUse DPPIR105 formula to calculate water density as function of temperature. temperature in K.\n\nReference: http://ddbonline.ddbst.de/DIPPR105DensityCalculation/DIPPR105CalculationCGI.exe?component=Water\n\nReturns density in kg/m^3\n\n\n\n\n\n","category":"function"},{"location":"#PhotonPropagation.Medium._absorption_coeff_dust-NTuple{5, Any}","page":"Home","title":"PhotonPropagation.Medium._absorption_coeff_dust","text":"_absorption_coeff_dust(wavelength, a_dust_400, kappa_abs_dust)\n\nCalculate the absorption coefficient contribution due to dust Taken from \"Measurement of South Pole ice transparency with the IceCube LED calibration system\", https://doi.org/10.1016/j.nima.2013.01.054\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._absorption_coeff_spice-NTuple{8, Any}","page":"Home","title":"PhotonPropagation.Medium._absorption_coeff_spice","text":"_absorption_coeff_spice(wavelength, A_SPICE, B_SPICE, a_dust_400, kappa, dT)\n\nCalculate the absorption coefficient for the SPICE model. Taken from \"Measurement of South Pole ice transparency with the IceCube LED calibration system\", https://doi.org/10.1016/j.nima.2013.01.054\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._absorption_length_straw-Tuple{Real}","page":"Home","title":"PhotonPropagation.Medium._absorption_length_straw","text":"_absorption_length_straw(wavelength::Real)\n\nCalculate the absorption length at wavelength (in nm).\n\nBased on interpolation of STRAW attenuation length measurement.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._calc_quan_fry_params-Tuple{Real, Real, Real}","page":"Home","title":"PhotonPropagation.Medium._calc_quan_fry_params","text":"_calc_quan_fry_params(salinity::Real, temperature::Real, pressure::Real)\n\nHelper function to get the parameters for the Quan & Fry formula as function of salinity, temperature and pressure.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._eff_sca_coeff_dust-Tuple{Any, Any, Any}","page":"Home","title":"PhotonPropagation.Medium._eff_sca_coeff_dust","text":"effscacoeffdust(wavelength, bdust400, alphascadust) Calculate the effective scattering coefficient for the SPICE model. Taken from \"Measurement of South Pole ice transparency with the IceCube LED calibration system\", https://doi.org/10.1016/j.nima.2013.01.054\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._ice_group_refractive_index-Tuple{Any}","page":"Home","title":"PhotonPropagation.Medium._ice_group_refractive_index","text":"icegrouprefractiveindex(wavelength)\n\nCalculate the group refractive index at wavelength (in nm) Taken from: \"Role of group and phase velocity in high-energy neutrino observatories\", https://doi.org/10.1016/S0927-6505(00)00142-0\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._ice_phase_refractive_index-Tuple{Any}","page":"Home","title":"PhotonPropagation.Medium._ice_phase_refractive_index","text":"_ice_phase_refractive_index(wavelength)\n\nCalculate the phase refractive index at wavelength (in nm) Taken from: \"Role of group and phase velocity in high-energy neutrino observatories\", https://doi.org/10.1016/S0927-6505(00)00142-0\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium._sca_len_part_conc-Tuple{T} where T<:Real","page":"Home","title":"PhotonPropagation.Medium._sca_len_part_conc","text":"_sca_len_part_conc(wavelength; vol_conc_small_part, vol_conc_large_part)\n\nCalculates the scattering length (in m) for a given wavelength based on concentrations of small (vol_conc_small_part) and large (vol_conc_large_part) particles. wavelength is given in nm, volconcsmallpart and volconclargepart in ppm\n\nAdapted from clsim ©Claudio Kopper\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.absorption_length-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.absorption_length","text":"absorption_length(wavelength, medium::MediumProperties)\n\nReturn absorption length (in m) at wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.cherenkov_angle-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.cherenkov_angle","text":"cherenkov_angle(wavelength, medium::MediumProperties)\n\nCalculate the cherenkov angle (in rad) for wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.dispersion-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.dispersion","text":"dispersion(wavelength, medium)\n\nReturn the dispersion at wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.dispersion_fry-Tuple{T} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.dispersion_fry","text":"dispersion_fry(     wavelength::T;     salinity::Real,     temperature::Real,     pressure::Real) where {T <: Real}\n\nCalculate the dispersion (dn/dλ) for the Quan & Fry model.\nwavelength is given in nm, salinity in permille, temperature in °C and pressure in atm\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.group_refractive_index-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.group_refractive_index","text":"group_refractive_index(wavelength, medium)\n\nReturn the group refractive index at wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.group_velocity-Union{Tuple{T}, Tuple{T, MediumProperties}} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.group_velocity","text":"refractive_index(wavelength, medium)\n\nReturn the group_velocity in m/ns at wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.hg_scattering_func-Tuple{T} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.hg_scattering_func","text":"hg_scattering_func(g::Real)\n\nCUDA-optimized version of Henyey-Greenstein scattering in one plane.\n\nArguments\n\ng::Real: mean scattering angle\n\nReturns\n\ntypeof(g) cosine of a scattering angle sampled from the distribution\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.make_cascadia_medium_properties-Union{Tuple{T}, Tuple{T, Any}, Tuple{T, Any, Any}} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.make_cascadia_medium_properties","text":"make_cascadia_medium_properties(::Type{T}) where {T<:Real}\n\nConstruct WaterProperties with properties from Cascadia Basin of numerical type T.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.make_homogenous_clearice_properties","page":"Home","title":"PhotonPropagation.Medium.make_homogenous_clearice_properties","text":"make_homogenous_clearice_properties()\n\nIce properties for the \"homogenous clear ice model\"\n\n\n\n\n\n","category":"function"},{"location":"#PhotonPropagation.Medium.mixed_hg_sl_scattering_func-Tuple{Real, Real}","page":"Home","title":"PhotonPropagation.Medium.mixed_hg_sl_scattering_func","text":"mixed_hg_sl_scattering_func(g, hg_fraction)\n\nMixture model of HG and SL.\n\nArguments\n\ng::Real: mean scattering angle\nhg_fraction::Real: mixture weight of the HG component\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.phase_refractive_index-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.phase_refractive_index","text":"phase_refractive_index(wavelength, medium)\n\nReturn the group refractive index at wavelength.\n\nwavelength is expected to be in units nm.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.refractive_index_fry-Tuple{T} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.refractive_index_fry","text":"refractive_index_fry(wavelength, salinity, temperature, pressure)\n\nThe phase refractive index of sea water according to a model from Quan & Fry.\n\nwavelength is given in nm, salinity in permille, temperature in °C and pressure in atm\n\nThe original model is taken from: X. Quan, E.S. Fry, Appl. Opt., 34, 18 (1995) 3477-3480.\n\nAn additional term describing pressure dependence was included according to: Wolfgang H.W.A. Schuster, \"Measurement of the Optical Properties of the Deep Mediterranean - the ANTARES Detector Medium.\", PhD thesis (2002), St. Catherine's College, Oxford downloaded Jan 2011 from: http://www.physics.ox.ac.uk/Users/schuster/thesis0098mmjhuyynh/thesis.ps\n\nAdapted from clsim (©Claudio Kopper)\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.scattering_length-Tuple{Any, MediumProperties}","page":"Home","title":"PhotonPropagation.Medium.scattering_length","text":"scattering_length(wavelength, medium::MediumProperties)\n\nReturn scattering length at wavelength.\n\nwavelength is expected to be in units nm. Returned length is in units m.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Medium.sl_scattering_func-Tuple{T} where T<:Real","page":"Home","title":"PhotonPropagation.Medium.sl_scattering_func","text":"sl_scattering_func(g::Real)\n\nSimplified-Liu scattering angle function. Implementation from: https://user-web.icecube.wisc.edu/~dima/work/WISC/ppc/spice/new/paper/a.pdf\n\nArguments\n\ng::Real: mean scattering angle\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Detection.Circular","page":"Home","title":"PhotonPropagation.Detection.Circular","text":"Circular{T <: Real} <: TargetShape\n\nCircular target shape.  CAUTION: The orientation is currently always e_z\n\nFields\n\nposition - center point of the rectangle (in m)\nradius - circle radius (in m)\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.DummyShape","page":"Home","title":"PhotonPropagation.Detection.DummyShape","text":"DummyShape{T <: Real} <: TargetShape\n\nDummy target shape, used to define a position.\n\nFields\n\nposition - Shape position\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.HomogeneousDetector","page":"Home","title":"PhotonPropagation.Detection.HomogeneousDetector","text":"struct HomogeneousDetector{TS <: TargetShape} <: PhotonTarget{TS}\n\nA struct representing a homogeneous detector.\n\nFields\n\nshape::TS: The shape of the detector.\nactive_area::Float64: The active area of the detector.\nmodule_id::UInt16: The module ID of the detector.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.POMRelativeAcceptance","page":"Home","title":"PhotonPropagation.Detection.POMRelativeAcceptance","text":"POMRelativeAcceptance{I} <: PMTAcceptance\n\nThis parametrization uses a unit acceptance for PMTs in group 2 and a relative acceptance (relative to group 2) for group 1. This is intended to be used when the emission spectrum is already biased wrt. to the acceptance\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.Rectangular","page":"Home","title":"PhotonPropagation.Detection.Rectangular","text":"Rectangular{T <: Real} <: TargetShape\n\nRectangular target shape.  CAUTION: The orientation is currently always e_z\n\nFields\n\nposition - center point of the rectangle (in m)\nlength_x - length in x direction (in m)\nlength_y - length in y direction (in m)\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.Spherical","page":"Home","title":"PhotonPropagation.Detection.Spherical","text":"Spherical{T <: Real} <: TargetShape\n\nSpherical target shape\n\nFields\n\nposition - center point of the sphere (in m)\nradius - sphere radius (in m)\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.SphericalHomogeneousDetector","page":"Home","title":"PhotonPropagation.Detection.SphericalHomogeneousDetector","text":"struct SphericalHomogeneousDetector{T} <: PhotonTarget{Spherical{T}}\n\nA struct representing a spherical homogeneous detector.\n\nFields\n\nshape::Spherical{T}: The shape of the detector.\nactive_area::Float64: The active area of the detector.\nmodule_id::UInt16: The module ID of the detector.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.SphericalMultiPMTDetector","page":"Home","title":"PhotonPropagation.Detection.SphericalMultiPMTDetector","text":"struct SphericalMultiPMTDetector{N,L,T,I} <: PixelatedTarget{Spherical{T}}\n\nA struct representing a spherical multi-PMT detector.\n\nFields\n\nshape::Spherical{T}: The shape of the detector.\npmt_area::Float64: The area of each PMT.\npmt_coordinates::SMatrix{2,N,Float64,L}: The coordinates of the PMTs.\nwl_acceptance::I: The wavelength acceptance of the detector.\nmodule_id::UInt16: The ID of the module.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.TargetShape","page":"Home","title":"PhotonPropagation.Detection.TargetShape","text":"TargetShape\n\nBase type for photon target shapes.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.Detection.check_pmt_hit-Tuple{AbstractVector, AbstractVector, AbstractVector, AbstractVector, HomogeneousDetector, Rotations.Rotation}","page":"Home","title":"PhotonPropagation.Detection.check_pmt_hit","text":"function check_pmt_hit(\n    hit_positions::AbstractVector,\n    ::AbstractVector,\n    ::AbstractVector,\n    d::HomogeneousDetector,\n    ::Rotation)\n\nTest if photons hit a pmt and return a vector of hit pmt indices (0 for no hit).\n\nNote: This function effectively resamples the (weighted) photons after photon propagation to hits\nwith their natural rate.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Detection.check_pmt_hit-Tuple{AbstractVector, AbstractVector, AbstractVector, POM{<:Real, <:POMRelativeAcceptance}, Rotations.Rotation{3, <:Real}}","page":"Home","title":"PhotonPropagation.Detection.check_pmt_hit","text":"check_pmt_hit(\n    hit_positions::AbstractVector,\n    hit_directions::AbstractVector,\n    hit_wavelengths::AbstractVector,\n    target::POM{<:Real, POMRelativeAcceptance},\n    orientation::Rotation{3,<:Real})\n\nConvert photon hits into PMT hits, returning a PMT id for each photon that is detected by a PMT\nand `0` for photons that did not hit a PMT.\n\nHere, we only apply the relative wavelength acceptance of PMT group 1 wrt. group 2.\nIntended to be used with a biased emission spectrum.\n\nNOTE: DO NOT USE\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Detection.check_pmt_hit_opening_angle-Union{Tuple{T}, Tuple{StaticArraysCore.SVector{3, <:Real}, AbstractVector{T}, Real}} where T<:(AbstractVector{<:Real})","page":"Home","title":"PhotonPropagation.Detection.check_pmt_hit_opening_angle","text":"check_pmt_hit_opening_angle(rel_hit_position, pmt_positions, opening_angle)\n\nCheck if the relative hit position is within the opening angle of any PMT.\n\nArguments\n\nrel_hit_position::SVector{3,<:Real}: The relative hit position.\npmt_positions::AbstractVector{T}: The positions of the PMTs.\nopening_angle::Real: The opening angle threshold.\n\nReturns\n\nj::Int: The index of the first PMT within the opening angle, or 0 if none.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Detection.get_pmt_positions-Tuple{PixelatedTarget, Rotations.Rotation{3, <:Real}}","page":"Home","title":"PhotonPropagation.Detection.get_pmt_positions","text":"get_pmt_positions(target, orientation)\n\nCompute the positions of the photomultiplier tubes (PMTs) in a pixelated target.\n\nArguments\n\ntarget: A PixelatedTarget object representing the pixelated target.\norientation: A Rotation{3,<:Real} object representing the orientation of the target.\n\nReturns\n\nAn array of SVector{3, eltype(target.pmt_coordinates)} representing the positions of the PMTs.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.Detection.surface_area-Tuple{TargetShape}","page":"Home","title":"PhotonPropagation.Detection.surface_area","text":"surface_area(::TargetShape)     Return the surface area of the target shape.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.PhotonPropagationCuda.initialize_direction_isotropic-Tuple{Type}","page":"Home","title":"PhotonPropagation.PhotonPropagationCuda.initialize_direction_isotropic","text":"initialize_direction_isotropic(T::Type)\n\nSample a direction isotropically\n\nArguments\n\nT::Type: desired eltype of the return value\n\nReturns\n\nStaticVector{3, T}: Cartesian coordinates of the sampled direction\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.PhotonPropagationCuda.uniform-Union{Tuple{T}, Tuple{T, T}} where T","page":"Home","title":"PhotonPropagation.PhotonPropagationCuda.uniform","text":"uniform(minval::T, maxval::T) where {T}\n\nConvenience function for sampling uniform values in [minval, maxval]\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.AxiconeEmitter","page":"Home","title":"PhotonPropagation.LightYield.AxiconeEmitter","text":"struct AxiconeEmitter{T} <: PhotonSource{T}\n\nA struct representing an axicone emitter.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in 3D space.\ndirection::SVector{3,T}: The direction of axis of the axicone.\ntime::T: The time at which the photons are emitted.\nphotons::Int64: The number of photons to be emitted.\nangle::T: The angle of emission.\nbeam_divergence::T: The divergence angle of the emitted photons.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.CherenkovTrackLengthParameters","page":"Home","title":"PhotonPropagation.LightYield.CherenkovTrackLengthParameters","text":"Struct for storing the parameters of the Cherenkov track length parametrisation. See: https://arxiv.org/pdf/1210.5140.pdf\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.CollimatedIsotropicEmitter","page":"Home","title":"PhotonPropagation.LightYield.CollimatedIsotropicEmitter","text":"struct CollimatedIsotropicEmitter{T} <: PhotonSource{T}\n\nA struct representing a point-like isotropic photon emitter.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in 3D space.\ntime::T: The time at which the photons are emitted.\nphotons::Int64: The number of photons emitted.\ncut_angle_cos: Cosine of the maximum emission angle\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.ExtendedCherenkovEmitter","page":"Home","title":"PhotonPropagation.LightYield.ExtendedCherenkovEmitter","text":"struct ExtendedCherenkovEmitter{T} <: CherenkovEmitter{T}\n\nA struct representing an extended cascade emitter.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in three-dimensional space.\ndirection::SVector{3,T}: The direction of the cascade axis.\ntime::T: The vertex time of the cascades.\nphotons::Int64: The number of photons emitted.\nlong_param::LongitudinalParameterisation{T}: The longitudinal parameterisation of the emitter.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.ExtendedCherenkovEmitter-Tuple{PhysicsTools.Types.Particle, MediumProperties, Spectrum}","page":"Home","title":"PhotonPropagation.LightYield.ExtendedCherenkovEmitter","text":"ExtendedCherenkovEmitter(particle::Particle, medium::MediumProperties, spectrum::Spectrum; oversample=1.0)\n\nConstructs an ExtendedCherenkovEmitter object that represents the emission of Cherenkov photons by a cascade in a medium.\n\nArguments\n\nparticle::Particle: The particle emitting the Cherenkov photons.\nmedium::MediumProperties: The properties of the medium.\nspectrum::Spectrum: The spectrum of the emitted photons.\noversample::Float64: The oversampling factor for the number of emitted photons (default: 1.0).\n\nReturns\n\nAn ExtendedCherenkovEmitter object representing the emission of Cherenkov photons.\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.LightyieldParametrisation","page":"Home","title":"PhotonPropagation.LightYield.LightyieldParametrisation","text":"Struct for holding both the longitudinal and the track length parametrisation\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.LongitudinalParameterisation","page":"Home","title":"PhotonPropagation.LightYield.LongitudinalParameterisation","text":"Struct for storing the energy-corrected values of the longitudinal Cherenkov lightyield parametrisation.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.LongitudinalParameterisation-Union{Tuple{ptype}, Tuple{Any, MediumProperties, Type{ptype}}} where ptype","page":"Home","title":"PhotonPropagation.LightYield.LongitudinalParameterisation","text":"LongitudinalParameterisation(energy, medium::MediumProperties, ::Type{ptype})\n\nConstruct LongitudinalParameterisation for a particle of type ptype at energy energy\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.LongitudinalParametersBase","page":"Home","title":"PhotonPropagation.LightYield.LongitudinalParametersBase","text":"LongitudinalParametersBase\n\nStruct for storing the parameters of the longitudinal Cherenkov lightyield parametrisation. These parameters are the baseline values at E=1GeV.\n\nFor obtaining the energy-correcected parameters, see get_longitudinal_params.\n\nSee: https://arxiv.org/pdf/1210.5140.pdf\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.PencilEmitter","page":"Home","title":"PhotonPropagation.LightYield.PencilEmitter","text":"struct PencilEmitter{T} <: PhotonSource{T}\n\nA struct representing a pencil beam that emits photons in a specific direction.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in 3D space.\ndirection::SVector{3,T}: The direction in which the photons are emitted.\nbeam_divergence::T: The divergence angle of the emitted photons.\ntime::T: The time at which the photons are emitted.\nphotons::Int64: The number of photons to be emitted.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.PointlikeIsotropicEmitter","page":"Home","title":"PhotonPropagation.LightYield.PointlikeIsotropicEmitter","text":"struct PointlikeIsotropicEmitter{T} <: PhotonSource{T}\n\nA struct representing a point-like isotropic photon emitter.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in 3D space.\ntime::T: The time at which the photons are emitted.\nphotons::Int64: The number of photons emitted.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield.PointlikeTimeRangeEmitter","page":"Home","title":"PhotonPropagation.LightYield.PointlikeTimeRangeEmitter","text":"struct PointlikeTimeRangeEmitter{T,U} <: PhotonSource{T}\n\nA struct representing a point-like photon emitter with a time range.\n\nFields\n\nposition::SVector{3,T}: The position of the emitter in 3D space.\ntime_range::Tuple{U,U}: The range of time in which photons are emitted.\nphotons::Int64: The number of photons emitted.\n\n\n\n\n\n","category":"type"},{"location":"#PhotonPropagation.LightYield._interp_ch_ang_dist_int","page":"Home","title":"PhotonPropagation.LightYield._interp_ch_ang_dist_int","text":"_interp_ch_ang_dist_int(ref_ix_low, ref_ix_hi, steps=0.01)\n\nInterpolate the integral of the Cherenkov angular distance distribution in the range [refixlow, refixhi].\n\n\n\n\n\n","category":"function"},{"location":"#PhotonPropagation.LightYield.cascade_cherenkov_track_length-Tuple{Real, CherenkovTrackLengthParameters}","page":"Home","title":"PhotonPropagation.LightYield.cascade_cherenkov_track_length","text":"cascade_cherenkov_track_length(energy::Real, track_len_params::CherenkovTrackLengthParameters)\n\nCherenkov track length for cascades. energy in GeV\n\nreturns track length in m\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.cherenkov_ang_dist","page":"Home","title":"PhotonPropagation.LightYield.cherenkov_ang_dist","text":"cherenkovangdist(costheta, ref_index)\n\nAngular distribution of cherenkov photons for EM cascades.\n\nTaken from https://arxiv.org/pdf/1210.5140.pdf\n\n\n\n\n\n","category":"function"},{"location":"#PhotonPropagation.LightYield.cherenkov_ang_dist_int_analytic","page":"Home","title":"PhotonPropagation.LightYield.cherenkov_ang_dist_int_analytic","text":"cherenkov_ang_dist_int_analytic(ref_index, lower, upper, ang_dist_pars)\n\nIntegral of the cherenkov angular distribution function.\n\n\n\n\n\n","category":"function"},{"location":"#PhotonPropagation.LightYield.gamma_cdf-Tuple{Any, Any, Any}","page":"Home","title":"PhotonPropagation.LightYield.gamma_cdf","text":"gamma_cdf(a, b, z)\n\nCumulative Gamma distribution $ int_0^z Gamma(a, b) $\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.get_longitudinal_params-Union{Tuple{ptype}, Tuple{Type{ptype}, Any}} where ptype","page":"Home","title":"PhotonPropagation.LightYield.get_longitudinal_params","text":"get_longitudinal_params(::Type{ptype}, energy)\n\nCalculate the longitudinal parameters at energy (in GeV).\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.integral_long_profile-Tuple{Real, Real, LongitudinalParameterisation}","page":"Home","title":"PhotonPropagation.LightYield.integral_long_profile","text":"integral_long_profile(z_low::Real, z_high::Real, long_param::LongitudinalParameterisation)\n\nIntegral of the longitudinal profile from shower depth zlow (in m) to zhigh\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.longitudinal_profile-Tuple{Real, LongitudinalParameterisation}","page":"Home","title":"PhotonPropagation.LightYield.longitudinal_profile","text":"longitudinal_profile(z::Real, medium::MediumProperties, long_param::LongitudinalParameterisation)\n\nLongitudinal shower profile (PDF) at shower depth z ( in m )\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.rel_additional_track_length-Tuple{Any, Any}","page":"Home","title":"PhotonPropagation.LightYield.rel_additional_track_length","text":"rel_additional_track_length(ref_index)\n\nCalculate additional track length for muons. From https://arxiv.org/pdf/1206.5530.pdf\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.rel_additional_track_length_params-Tuple{Any}","page":"Home","title":"PhotonPropagation.LightYield.rel_additional_track_length_params","text":"rel_additional_track_length_params(ref_index)\n\nInterpolate additional track length parameters, taken from https://arxiv.org/pdf/1206.5530.pdf using E_cut = 500MeV\n\n\n\n\n\n","category":"method"},{"location":"#PhotonPropagation.LightYield.rescale_source-Union{Tuple{T}, Tuple{T, Number}} where T<:PhotonSource","page":"Home","title":"PhotonPropagation.LightYield.rescale_source","text":"rescale_source(em::T, factor::Number) where {T <: PhotonSource}\n\nReturn a new emitter of type T with number of photons increased by factor\n\n\n\n\n\n","category":"method"}]
}
